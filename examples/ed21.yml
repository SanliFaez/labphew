# parameters for the scan go here
iv scan:
  filename:         'C:\Temp\IV scan.nc'
  title:            IV scan
  start:            0     # (V)
  stop:             5     # (V)
  step:             0.04  # (V)
  R:                100  # Ohm
  x_label:          'forward voltage'
  x_units:          'V'
  y_label:          'forward current'
  y_units:          'mA'
  stabilize_time:   0.001 # (s)
  ai_ch_led:        1
  ai_ch_r:          2
  stop_timeout:       3   # (s) How much time to give scan loop to stop before forcefully terminating it
  gui_refresh_time:   .01     # (s) How often gui checks if here's new data (usually quicker than time_step)


scan:
  filename:         'C:\Temp\Example scan.nc'
  title:            Example scan
  start:            0     # (V)
  stop:             5     # (V)
  step:             0.04  # (V)
  test:             False
  test2:            True
  x_label:          'scan voltage'
  x_units:          'V'
  y_label:          'measured voltage'
  y_units:          'V'
  integration_time: 0.1 # (s)    # This is not implemented
  stabilize_time:   0.001 # (s)
  ao_channel:       2
  ai_channel:       2
  stop_timeout:       3   # (s) How much time to give scan loop to stop before forcefully terminating it
  gui_refresh_time:   .01     # (s) How often gui checks if here's new data (usually quicker than time_step)

# set limits for the analog out channels and optionally give them custom display names
ao:
  1:
    name:           Channel 1
    upper_limit:    5.4       # (Volt)
    lower_limit:    -5.4      # (Volt)
  2:
    name:           Channel 2
    upper_limit:    5.4       # (Volt)
    lower_limit:    -5.4      # (Volt)

# set parameters for the monitor here
monitor:
  time_step:        0.050   # (s) Note that the basic analog approach doesn't really go faster than 0.010 seconds
  plot_points:      110
  1:
    name:           AI Channel 1
    xlabel:         'time'
  2:
    name:           AI Channel 2
  gui_refresh_time: .01     # (s) How often gui checks if here's new data (usually quicker than time_step)
  text_update_time: .5      # (s) Minimum time for the gui to update the value displayed as text
  stop_timeout:     1       # (s) How much time to give monitor to stop before forcefully terminating it